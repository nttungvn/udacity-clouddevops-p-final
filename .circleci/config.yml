version: 2.1
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  aws-cli: circleci/aws-cli@3.1
  docker: circleci/docker@2.1.2
  kubernetes: circleci/kubernetes@1.3.1
jobs:         
  test_dockerfile:
    docker:
    # Use the same Docker base as the project
    - image: python:3.7.3-stretch

    working_directory: ~/repo

    steps:
    - checkout
    - run:
        name: install dependencies
        command: |
          python3 -m venv venv
          . venv/bin/activate
          make install
          # Install hadolint
          wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
          chmod +x /bin/hadolint
    - save_cache:
        paths:
          - ./venv
        key: v1-dependencies-{{ checksum "requirements.txt" }}

    # run lint!
    - run:
        name: run lint
        command: |
          . venv/bin/activate
          make lint 
  build_image:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: tungntvn/udacityp5
      - docker/push:
          image: tungntvn/udacityp5
  build_infras:
    docker:
      - image: cimg/python:3.11.0
    steps:
      - checkout
      - aws-cli/setup
      - aws-eks/create-cluster:
          cluster-name: eks-udacity
          aws-region: $AWS_REGION
          node-type:  t2.micro
          nodes-min:  2
          nodes-max:  2
  deploy_application:
    docker:
      - image: cimg/python:3.11.0
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: eks-udacity
          aws-region: ${AWS_REGION}
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: ".circleci/files/deployment.yml"
          resource-name: "deployment/nginx-deployment"
          get-rollout-status: true
          show-kubectl-command: true

workflows:
  default:
    jobs:
      # - build
      # - build_infras
      # - build_image
      - deploy_application